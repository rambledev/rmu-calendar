const { PrismaClient } = require('@prisma/client')
const bcrypt = require('bcryptjs')

const prisma = new PrismaClient()

// ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏´‡∏ô‡πà‡∏ß‡∏¢‡∏á‡∏≤‡∏ô‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î
const departments = [
  { name: '‡∏Ñ‡∏ì‡∏∞‡∏ß‡∏¥‡∏ó‡∏¢‡∏≤‡∏®‡∏≤‡∏™‡∏ï‡∏£‡πå‡πÅ‡∏•‡∏∞‡πÄ‡∏ó‡∏Ñ‡πÇ‡∏ô‡πÇ‡∏•‡∏¢‡∏µ', email: 'sci@event.rmu' },
  { name: '‡∏Ñ‡∏ì‡∏∞‡∏Ñ‡∏£‡∏∏‡∏®‡∏≤‡∏™‡∏ï‡∏£‡πå', email: 'edu@event.rmu' },
  { name: '‡∏Ñ‡∏ì‡∏∞‡∏ß‡∏¥‡∏ó‡∏¢‡∏≤‡∏Å‡∏≤‡∏£‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£', email: 'frs@event.rmu' },
  { name: '‡∏Ñ‡∏ì‡∏∞‡∏°‡∏ô‡∏∏‡∏©‡∏¢‡∏®‡∏≤‡∏™‡∏ï‡∏£‡πå', email: 'husoc@event.rmu' },
  { name: '‡∏Ñ‡∏ì‡∏∞‡πÄ‡∏ó‡∏Ñ‡πÇ‡∏ô‡πÇ‡∏•‡∏¢‡∏µ‡∏Å‡∏≤‡∏£‡πÄ‡∏Å‡∏©‡∏ï‡∏£', email: 'agt@event.rmu' },
  { name: '‡∏Ñ‡∏ì‡∏∞‡πÄ‡∏ó‡∏Ñ‡πÇ‡∏ô‡πÇ‡∏•‡∏¢‡∏µ‡∏™‡∏≤‡∏£‡∏™‡∏ô‡πÄ‡∏ó‡∏®', email: 'it@event.rmu' },
  { name: '‡∏Ñ‡∏ì‡∏∞‡∏£‡∏±‡∏ê‡∏®‡∏≤‡∏™‡∏ï‡∏£‡πå', email: 'pspa@event.rmu' },
  { name: '‡∏Ñ‡∏ì‡∏∞‡∏ô‡∏¥‡∏ï‡∏¥‡∏®‡∏≤‡∏™‡∏ï‡∏£‡πå', email: 'law@event.rmu' },
  { name: '‡∏Ñ‡∏ì‡∏∞‡∏ß‡∏¥‡∏ó‡∏ß‡∏Å‡∏£‡∏£‡∏°‡∏®‡∏≤‡∏™‡∏ï‡∏£‡πå', email: 'en@event.rmu' },
  { name: '‡∏ö‡∏±‡∏ì‡∏ë‡∏¥‡∏ï‡∏ß‡∏¥‡∏ó‡∏¢‡∏≤‡∏•‡∏±‡∏¢', email: 'gs@event.rmu' },
  { name: '‡∏™‡∏ô‡∏≠.', email: 'office@event.rmu' },
  { name: '‡∏Å‡∏≠‡∏á‡∏Å‡∏•‡∏≤‡∏á', email: 'center@event.rmu' },
  { name: '‡∏Å‡∏≠‡∏á‡∏Ñ‡∏•‡∏±‡∏á', email: 'finance@event.rmu' },
  { name: '‡∏Å‡∏≠‡∏á‡πÅ‡∏ú‡∏ô‡∏á‡∏≤‡∏ô‡πÅ‡∏•‡∏∞‡πÅ‡∏ú‡∏ô', email: 'plan@event.rmu' },
  { name: '‡∏Å‡∏≠‡∏á‡∏ö‡∏£‡∏¥‡∏´‡∏≤‡∏£‡∏á‡∏≤‡∏ô‡∏ö‡∏∏‡∏Ñ‡∏Ñ‡∏•', email: 'personel@event.rmu' },
  { name: '‡∏Å‡∏≠‡∏á‡∏û‡∏±‡∏í‡∏ô‡∏≤‡∏ô‡∏±‡∏Å‡∏®‡∏∂‡∏Å‡∏©‡∏≤', email: 'std@event.rmu' },
  { name: '‡∏®‡∏π‡∏ô‡∏¢‡πå‡∏™‡∏´‡∏Å‡∏¥‡∏à', email: 'coop@event.rmu' },
  { name: '‡∏®‡∏π‡∏ô‡∏¢‡πå‡∏ò‡∏∏‡∏£‡∏Å‡∏¥‡∏à', email: 'cc@event.rmu' },
  { name: '‡∏™‡∏ñ‡∏≤‡∏ö‡∏±‡∏ô‡∏ß‡∏¥‡∏à‡∏±‡∏¢', email: 'research@event.rmu' },
  { name: '‡∏™‡∏≥‡∏ô‡∏±‡∏Å‡∏ß‡∏¥‡∏ó‡∏¢‡∏ö‡∏£‡∏¥‡∏Å‡∏≤‡∏£', email: 'arit@event.rmu' },
  { name: '‡∏™‡∏≥‡∏ô‡∏±‡∏Å‡∏®‡∏¥‡∏•‡∏õ‡πÅ‡∏•‡∏∞‡∏ß‡∏±‡∏í‡∏ô‡∏ò‡∏£‡∏£‡∏°', email: 'culture@event.rmu' },
  { name: '‡∏á‡∏≤‡∏ô‡∏ó‡∏∞‡πÄ‡∏ö‡∏µ‡∏¢‡∏ô', email: 'reg@event.rmu' },
  { name: '‡∏™‡∏≥‡∏ô‡∏±‡∏Å‡∏ö‡∏£‡∏¥‡∏Å‡∏≤‡∏£‡∏ß‡∏¥‡∏ä‡∏≤‡∏Å‡∏≤‡∏£', email: 'asc@event.rmu' },
  { name: '‡∏™‡∏≥‡∏ô‡∏±‡∏Å‡∏ß‡∏¥‡πÄ‡∏ó‡∏®‡∏™‡∏±‡∏°‡∏û‡∏±‡∏ô‡∏ò‡πå', email: 'inter@event.rmu' },
  { name: '‡∏á‡∏≤‡∏ô‡∏õ‡∏£‡∏∞‡∏ä‡∏≤‡∏™‡∏±‡∏°‡∏û‡∏±‡∏ô‡∏ò‡πå', email: 'pr@event.rmu' },
  { name: '‡∏™‡∏†‡∏≤‡∏ß‡∏¥‡∏ä‡∏≤‡∏Å‡∏≤‡∏£', email: 'acc@event.rmu' },
  { name: '‡∏™‡∏†‡∏≤‡∏°‡∏´‡∏≤‡∏ß‡∏¥‡∏ó‡∏¢‡∏≤‡∏•‡∏±‡∏¢', email: 'council@event.rmu' },
  { name: '‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏†‡∏≤‡∏¢‡πÉ‡∏ô', email: 'audit@event.rmu' },
  { name: '‡πÇ‡∏£‡∏á‡πÄ‡∏£‡∏µ‡∏¢‡∏ô‡∏™‡∏≤‡∏ò‡∏¥‡∏ï ‡∏°‡∏£‡∏°.', email: 'satit@event.rmu' }
]

async function createAllAdminUsers() {
  const defaultPassword = 'Event123456*'
  const defaultRole = 'ADMIN'
  
  console.log('üöÄ ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏™‡∏£‡πâ‡∏≤‡∏á Admin users ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ó‡∏∏‡∏Å‡∏´‡∏ô‡πà‡∏ß‡∏¢‡∏á‡∏≤‡∏ô...\n')
  
  try {
    // Hash password ‡∏Ñ‡∏£‡∏±‡πâ‡∏á‡πÄ‡∏î‡∏µ‡∏¢‡∏ß
    const hashedPassword = await bcrypt.hash(defaultPassword, 12)
    
    let createdCount = 0
    let skippedCount = 0
    
    for (const dept of departments) {
      try {
        // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡∏°‡∏µ user ‡∏ô‡∏µ‡πâ‡∏≠‡∏¢‡∏π‡πà‡πÅ‡∏•‡πâ‡∏ß‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
        const existingUser = await prisma.user.findUnique({
          where: { email: dept.email }
        })
        
        if (existingUser) {
          console.log(`‚ö†Ô∏è  ‡∏Ç‡πâ‡∏≤‡∏°: ${dept.name} (${dept.email}) - ‡∏°‡∏µ‡∏≠‡∏¢‡∏π‡πà‡πÅ‡∏•‡πâ‡∏ß`)
          skippedCount++
          continue
        }
        
        // ‡∏™‡∏£‡πâ‡∏≤‡∏á user ‡πÉ‡∏´‡∏°‡πà
        const newUser = await prisma.user.create({
          data: {
            name: dept.name,
            email: dept.email,
            password: hashedPassword,
            role: defaultRole
          }
        })
        
        console.log(`‚úÖ ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à: ${newUser.name}`)
        console.log(`   üìß Email: ${newUser.email}`)
        console.log(`   üë§ Role: ${newUser.role}`)
        console.log(`   üîë Password: ${defaultPassword}`)
        console.log('')
        
        createdCount++
        
      } catch (error) {
        console.error(`‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏™‡∏£‡πâ‡∏≤‡∏á ${dept.name}:`, error.message)
      }
    }
    
    console.log('\nüìä ‡∏™‡∏£‡∏∏‡∏õ‡∏ú‡∏•‡∏•‡∏±‡∏û‡∏ò‡πå:')
    console.log(`‚úÖ ‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÉ‡∏´‡∏°‡πà: ${createdCount} users`)
    console.log(`‚ö†Ô∏è  ‡∏Ç‡πâ‡∏≤‡∏°: ${skippedCount} users (‡∏°‡∏µ‡∏≠‡∏¢‡∏π‡πà‡πÅ‡∏•‡πâ‡∏ß)`)
    console.log(`üìã ‡∏£‡∏ß‡∏°‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î: ${departments.length} ‡∏´‡∏ô‡πà‡∏ß‡∏¢‡∏á‡∏≤‡∏ô`)
    
    if (createdCount > 0) {
      console.log('\nüîê ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• Login:')
      console.log(`Password ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô: ${defaultPassword}`)
      console.log(`Role: ${defaultRole}`)
      console.log(`Format Email: [‡∏ï‡∏±‡∏ß‡∏¢‡πà‡∏≠]@event.rmu`)
    }
    
  } catch (error) {
    console.error('‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡∏ó‡∏±‡πà‡∏ß‡πÑ‡∏õ:', error)
  } finally {
    await prisma.$disconnect()
    console.log('\nüîå ‡∏õ‡∏¥‡∏î‡∏Å‡∏≤‡∏£‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠‡∏ê‡∏≤‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÅ‡∏•‡πâ‡∏ß')
  }
}

// ‡πÄ‡∏£‡∏µ‡∏¢‡∏Å‡πÉ‡∏ä‡πâ function
createAllAdminUsers()